{"version":3,"sources":["domain/ad/component/AvailableDayForm.tsx","domain/ad/container/Availability.tsx","page/AvailablePage.tsx","component/Alert.tsx","component/PrimaryButton.tsx","utils/calendar.ts","component/ErrorFieldForm.tsx","component/Ranking.tsx","domain/ad/component/detail/TitlePanel.tsx","containers/calendar/utils/types.ts","component/calendar/WeekDay.tsx","component/calendar/Month.tsx","component/calendar/Day.tsx","component/calendar/FakeDay.tsx","containers/calendar/Day.tsx","containers/calendar/Week.tsx","containers/calendar/Month.tsx","containers/calendar/icons/LeftArrow.jsx","containers/calendar/nav/LeftArrowNav.tsx","containers/calendar/icons/RightArrow.jsx","containers/calendar/nav/RightArrowNav.tsx","containers/calendar/nav/CalendarNavBar.tsx","component/calendar/Year.tsx","containers/calendar/Year.tsx","component/calendar/Calendar.tsx","containers/calendar/Calendar.tsx"],"names":["validationSchema","Yup","availability","oneOf","BLOCKED","AVAILABLE","ACTION_VALIDATE","AvailableDayForm","blockedDays","adTitle","adRanking","validRange","updating","range","errorMessage","loadingCurrentAd","closeError","onChangeRange","handleValidRangeAlert","onSubmit","classes","useStyles","initialValues","values","checkin","checkout","errors","handleChange","className","container","CircularProgress","size","loading","calendar","Calendar","blockedDayList","Collapse","in","severity","REQUIRED_RANGE","fields","TitlePanel","title","ranking","Typography","variant","color","AVAILABILITY","RadioGroup","radioGroup","aria-label","name","value","onChange","FormControlLabel","control","Radio","label","ErrorFieldForm","button","PrimaryButton","disabled","type","SUBMIT","message","open","onClose","makeStyles","theme","display","flexFlow","alignItems","justifyContent","width","customTheme","dimension","w100","marginTop","spacing","margin","small","padding","marginBottom","big","flexDirection","breakpoints","down","price","position","top","m50","left","Availability","useState","setRange","setAvailability","isValidRange","setIsValidRange","setAlertError","useCurrentAvailabilityQuery","data","currentAdError","error","refetch","useUpdateAvailabilityMutation","updateFn","graphQLErrors","map","join","querySetValues","useMemo","currentAvailability","ad","useCallback","undefined","handldeOnRangeChanged","handleAvailability","variables","adId","id","format","DATE_FORMAT","ops","OpsEnum","Blocked","Available","then","catch","isFullAvailable","isFullBlocked","UNDEFINED","blockedDateRange","checkIn","clone","isBefore","isBlocked","add","date","blockedDay","i","length","getBlockedDateRange","byBooking","isSameOrAfter","isSameOrBefore","AvailabilityPage","ContainerPage","Alert","rest","autoHideDuration","elevation","children","fullWidth","smaller","white","moment","component","primaryDark","alignSelf","fontSize","font","Ranking","ratingContainer","Rating","rating","readOnly","ratingTypo","marginRight","palette","primary","main","fontWeight","text","DAY_STATE","WeekDay","WEEK_DAYS","day","key","weekDay","day_calendar_width","Month","month","weeks","Day","dateOfDay","style","onDayClick","onClick","props","height","day_calendar_height","cursor","FakeDay","backgroundColor","background","isSame","currentMonth","getDayStyle","state","BLOCKED_DAY","textDecoration","grayLight1","BLOCKED_BY_BOOKING","foreground","bold","SINGLE_SELECTED","borderRadius","primaryAccent","FIRST_RANGE_SELECTED","borderTopLeftRadius","w50","borderBottomLeftRadius","MIDDLE_RANGE_SELECTED","LAST_RANGE_SELECTED","borderTopRightRadius","borderBottomRightRadius","EMPTY","radius","BEFORE_CURRENT","secondary","Week","dayList","index","smaller1","createWeeks","push","slice","LeftArrow","viewBox","data-name","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","LeftArrowNav","previousMonth","IconButton","arrow","marginLeft","RightArrow","RightArrowNav","nextMonth","CalendarNavBar","paddingTop","paddingBottom","Year","firstMonthDayList","Hidden","only","secondMonthDayList","setCurrentMonth","dayListFirstMonth","createDays","dayListSecondMonth","thisMoment","subtract","startOfMonth","startOf","endOfMonth","endOf","generateDayList","firstDay","days","currentDate","getDayState","isBetween","resolveByDefaultState","isBLockedByBooking","isBLocked","handleOnClickedDay","Date","checkRangeInEditableMode","isSelectedCheckInValid","isSelectedRangeValid","orderedRange","checkRangeOrder","checkRange","checkOut"],"mappings":"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","file":"static/js/11.35029ae1.chunk.js","sourcesContent":["import { Collapse, FormControlLabel, Radio, RadioGroup, Theme, Typography, CircularProgress } from '@material-ui/core'\nimport CalendarAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/styles'\nimport { Form, Formik } from 'formik'\nimport React from 'react'\nimport * as Yup from 'yup'\nimport { ErrorFieldForm } from '../../../component/ErrorFieldForm'\nimport { PrimaryButton } from '../../../component/PrimaryButton'\nimport { BlockedDay, Calendar } from '../../../containers/calendar/Calendar'\nimport customTheme from '../../../theme'\nimport { ACTION_VALIDATE, AVAILABILITY, AVAILABLE, BLOCKED, REQUIRED_RANGE, SUBMIT } from '../../../utils/constants'\nimport { Range } from '../../../utils/type'\nimport { TitlePanel } from '../../ad/component/detail/TitlePanel'\nimport Alert from '../../../component/Alert';\n\ninterface Props {\n\tblockedDays: BlockedDay[];\n\tadTitle: string;\n\tadRanking: number;\n\trange: Range | undefined;\n\terrorMessage?: string;\n\tcloseError: () => void;\n\tonChangeRange: (range: Range) => void;\n\thandleValidRangeAlert: () => void;\n\tloadingCurrentAd: boolean;\n\tupdating: boolean;\n\tavailability: string;\n\tvalidRange: boolean;\n\tonSubmit: (availability: string) => void;\n}\n\nconst validationSchema = Yup.object({\n\tavailability: Yup.string().oneOf([BLOCKED, AVAILABLE], ACTION_VALIDATE),\n})\n\nconst AvailableDayForm = ({ blockedDays, adTitle, adRanking, validRange, updating, range, availability, errorMessage, loadingCurrentAd, closeError, onChangeRange, handleValidRangeAlert, onSubmit }: Props) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{ availability }}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tonSubmit={(values) => {\n\t\t\t\tif (range && range.checkin && range.checkout) {\n\t\t\t\t\tonSubmit(values.availability)\n\t\t\t\t} else handleValidRangeAlert();\n\t\t\t}}\n\t\t>\n\t\t\t{({ values, errors, handleChange }) =>\n\t\t\t\t<Form>\n\t\t\t\t\t<div className={classes.container}>\n\t\t\t\t\t\t{loadingCurrentAd && <CircularProgress size={50} className={classes.loading} />}\n\t\t\t\t\t\t<div className={classes.calendar}>\n\t\t\t\t\t\t\t<Calendar blockedDayList={blockedDays} onChangeRange={onChangeRange} />\n\t\t\t\t\t\t\t<Collapse in={!validRange}>\n\t\t\t\t\t\t\t\t<CalendarAlert severity=\"error\">{REQUIRED_RANGE}</CalendarAlert>\n\t\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={classes.fields}>\n\t\t\t\t\t\t\t<TitlePanel title={adTitle} ranking={adRanking} />\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Typography variant='h5' color='textPrimary' >{AVAILABILITY}</Typography>\n\t\t\t\t\t\t\t\t<RadioGroup className={classes.radioGroup} aria-label={AVAILABILITY} name={'availability'} value={values.availability} onChange={handleChange}>\n\t\t\t\t\t\t\t\t\t<FormControlLabel value={BLOCKED} control={<Radio color={'primary'} />} label={BLOCKED} />\n\t\t\t\t\t\t\t\t\t<FormControlLabel value={AVAILABLE} control={<Radio color={'primary'} />} label={AVAILABLE} />\n\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t\t{errors.availability && (<ErrorFieldForm name='availability' />)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={classes.button}>\n\t\t\t\t\t\t\t\t<PrimaryButton\n\t\t\t\t\t\t\t\t\tloading={updating}\n\t\t\t\t\t\t\t\t\tdisabled={values.availability === availability}\n\t\t\t\t\t\t\t\t\ttype='submit' >{SUBMIT}</PrimaryButton>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\tmessage={errorMessage}\n\t\t\t\t\t\t\topen={!!errorMessage}\n\t\t\t\t\t\t\tonClose={closeError}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t}\n\t\t</Formik>\n\t)\n}\n\nexport default AvailableDayForm;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexFlow: 'row wrap',\n\t\talignItems: 'baseline',\n\t\tjustifyContent: 'center',\n\t\twidth: customTheme.dimension.width.w100,\n\t\tmarginTop: customTheme.spacing.margin.small,\n\t\tpadding: theme.spacing(1),\n\t},\n\tcalendar: {\n\t\tmarginBottom: customTheme.spacing.margin.big,\n\t},\n\tfields: {\n\t\tmargin: `0 ${customTheme.spacing.margin.small}`,\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\t[theme.breakpoints.down('md')]: {\n\t\t\tmarginTop: theme.spacing(2)\n\t\t}\n\t},\n\tradioGroup: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row'\n\t},\n\tprice: {\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tbutton: {\n\t\tmarginTop: theme.spacing(2),\n\t\tdisplay: 'inline-block'\n\t},\n\tloading: {\n\t\tposition: 'absolute',\n\t\ttop: customTheme.spacing.margin.m50,\n\t\tleft: customTheme.spacing.margin.m50\n\t}\n})\n);\n","import { ApolloError } from 'apollo-boost'\nimport { Moment } from 'moment'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { BlockedDay } from '../../../containers/calendar/Calendar'\nimport { OpsEnum, useCurrentAvailabilityQuery, useUpdateAvailabilityMutation } from '../../../generate/types'\nimport { getBlockedDateRange } from '../../../utils/calendar'\nimport { AVAILABLE, BLOCKED, DATE_FORMAT, UNDEFINED } from '../../../utils/constants'\nimport { Range } from '../../../utils/type'\nimport Form from '../component/AvailableDayForm'\n\nconst initialValues = {\n\tadTitle: '',\n\tadRanking: 0,\n\tblockedDays: []\n}\n\nexport const Availability = () => {\n\tconst [range, setRange] = useState<Range>()\n\tconst [availability, setAvailability] = useState<string>('undefined')\n\tconst [isValidRange, setIsValidRange] = useState<boolean>(true)\n\tconst [errorMessage, setAlertError] = useState<string | undefined>();\n\tconst { data, loading: loadingCurrentAd, error: currentAdError, refetch } = useCurrentAvailabilityQuery()\n\tconst [updateFn, { loading: updating }] = useUpdateAvailabilityMutation()\n\n\tif (currentAdError) setAlertError(currentAdError?.graphQLErrors.map(({ message }) => message).join(', '))\n\n\tconst querySetValues = useMemo(() => {\n\t\tif (!data || !data.currentAvailability?.ad) return initialValues;\n\t\treturn {\n\t\t\tadTitle: data.currentAvailability.ad.title,\n\t\t\tadRanking: data.currentAvailability.ad.ranking,\n\t\t\tblockedDays: data.currentAvailability.ad.blockedDays\n\t\t}\n\t}, [data])\n\n\tconst closeError = useCallback(() => {\n\t\tsetAlertError(undefined);\n\t}, [setAlertError]);\n\n\tconst handleValidRange = () => {\n\t\tsetIsValidRange(!isValidRange)\n\t}\n\n\tconst handldeOnRangeChanged = useCallback((range: Range) => {\n\t\tif (range && range.checkin && range.checkout && data && data.currentAvailability && data.currentAvailability.ad)\n\t\t\tsetAvailability(handleAvailability(range, data.currentAvailability.ad.blockedDays));\n\t\tsetRange(range)\n\t}, [range])\n\n\tconst onSubmit = (availability: string) => {\n\t\tif (data && data.currentAvailability?.ad)\n\t\t\tupdateFn({\n\t\t\t\tvariables: {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tadId: data.currentAvailability.ad.id,\n\t\t\t\t\t\tcheckin: range?.checkin?.format(DATE_FORMAT),\n\t\t\t\t\t\tcheckout: range?.checkout?.format(DATE_FORMAT),\n\t\t\t\t\t\tops: availability === OpsEnum.Blocked ? OpsEnum.Blocked : OpsEnum.Available\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(() => refetch())\n\t\t\t\t.catch((error: ApolloError) => { setAlertError(error?.graphQLErrors.map(({ message }) => message).join(', ')); });\n\t}\n\n\treturn <Form\n\t\tonChangeRange={handldeOnRangeChanged}\n\t\thandleValidRangeAlert={handleValidRange}\n\t\terrorMessage={errorMessage}\n\t\tcloseError={closeError}\n\t\tvalidRange={isValidRange}\n\t\tonSubmit={onSubmit}\n\t\tloadingCurrentAd={loadingCurrentAd}\n\t\tupdating={updating}\n\t\trange={range}\n\t\tavailability={availability}\n\t\t{...querySetValues}\n\t/>\n}\n\nconst handleAvailability = (range: Range, blockedDays: BlockedDay[] | undefined) => {\n\tif (blockedDays && isFullAvailable(range, blockedDays)) {\n\t\treturn AVAILABLE;\n\t} else if (blockedDays && isFullBlocked(range, blockedDays)) {\n\t\treturn BLOCKED;\n\t} else return UNDEFINED;\n}\n\nconst isFullBlocked = (range: Range, blockedDateRange: BlockedDay[]) => {\n\tlet checkIn = range.checkin?.clone()\n\twhile (checkIn?.isBefore(range.checkout)) {\n\t\tconst isBLocked = (isBlocked(checkIn, blockedDateRange));\n\t\tif (!isBLocked) return false;\n\t\tcheckIn.add(24, 'hours')\n\t}\n\treturn true\n}\n\nconst isFullAvailable = (range: Range, blockedDateRange: BlockedDay[]) => {\n\tlet checkIn = range.checkin?.clone()\n\twhile (checkIn?.isBefore(range.checkout)) {\n\t\tif (isBlocked(checkIn, blockedDateRange)) return false\n\t\tcheckIn.add(24, 'hours')\n\t}\n\treturn true\n}\n\nconst isBlocked = (date: Moment, blockedDay: BlockedDay[]) => {\n\tfor (let i = 0; i < blockedDay.length; i++) {\n\t\tconst range = getBlockedDateRange(blockedDay[i])\n\t\tif (blockedDay[i].byBooking && date.isSameOrAfter(range.checkin) && date.isBefore(range.checkout)) {\n\t\t\treturn true\n\t\t} else if (!blockedDay[i].byBooking && date.isSameOrAfter(range.checkin) && date.isSameOrBefore(range.checkout)) {\n\t\t\treturn true\n\t\t}\n\t} return false\n}\n","import React from 'react'\nimport ContainerPage from '../containers/ContainerPage'\nimport { Availability } from '../domain/ad/container/Availability'\n\n\nconst AvailabilityPage = () => {\n    return (\n        <ContainerPage>\n            <Availability />\n        </ContainerPage>\n    )\n}\nexport default AvailabilityPage","import { Snackbar } from \"@material-ui/core\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\nimport React from \"react\";\n\ntype Props = {\n  message?: string;\n  open?: boolean;\n  severity?:string;\n} & AlertProps;\n\nconst Alert = ({ severity='error', message, open, ...rest }: Props) => {\n  return (\n    <>\n      <Snackbar open={open} autoHideDuration={6000}>\n        <MuiAlert elevation={6} variant=\"filled\" severity={severity} {...rest}>\n          {message}\n        </MuiAlert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default Alert;\n","import Button, { ButtonProps } from '@material-ui/core/Button';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport customTheme from '../theme';\nimport { CircularProgress } from '@material-ui/core';\n\ntype Props = {\n  loading?: boolean;\n} & ButtonProps;\n\nexport const PrimaryButton = ({loading, children, ...rest}: Props) => {\n    const classes = useStyles();\n\n    return <Button className={classes.button} size=\"small\" fullWidth variant=\"contained\" color='primary'   {...rest} >\n      { loading && <CircularProgress className={classes.loading} size={20} /> }\n      { !loading && children }\n    </Button>\n}\n\nconst useStyles = makeStyles({\n    button: {\n        margin: `${customTheme.spacing.margin.small} auto`,\n        padding: customTheme.spacing.margin.smaller\n    },\n    loading: {\n      color: customTheme.color.white,\n    }\n});\n\n","import moment from 'moment'\nimport { BlockedDay } from '../containers/calendar/Calendar'\nimport { DATE_FORMAT } from './constants'\nimport { Range } from './type'\n\n\nexport const getBlockedDateRange = (blockedDay: BlockedDay): Range => {\n    return {\n        checkin: moment(blockedDay.checkin, DATE_FORMAT),\n        checkout: moment(blockedDay.checkout, DATE_FORMAT)\n    }\n}        ","import { makeStyles } from '@material-ui/styles';\nimport { ErrorMessage } from 'formik';\nimport React from 'react';\nimport customTheme from '../theme';\n\ninterface Props {\n    name: string;\n}\n\nexport const ErrorFieldForm = ({ name }: Props) => {\n    const classes = useStyles()\n    return <ErrorMessage className={classes.error} name={name} component=\"div\" />\n}\n\nconst useStyles = makeStyles({\n    error: {\n        color: customTheme.color.primaryDark,\n        alignSelf: 'flex-start',\n        fontSize: customTheme.font.size.small\n    },\n});\n\n","import { Theme, Typography } from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\nimport { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport customTheme from '../theme';\n\ninterface Props {\n    ranking: number;\n}\n\nexport const Ranking = ({ ranking }: Props) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.ratingContainer}>\n            <Rating className={classes.rating} value={ranking} readOnly size={'small'} />\n            <Typography className={classes.ratingTypo}>{`${ranking} `}</Typography>\n        </div>\n    )\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    ratingContainer: {\n        display: 'flex',\n        justifyContent: 'start',\n        alignItems: 'center'\n    },\n    rating: {\n        fontSize: customTheme.font.size.small,\n        marginRight: theme.spacing(1),\n        color: theme.palette.primary.main,\n    },\n    ratingTypo: {\n        fontWeight: 'bold',\n        marginRight: theme.spacing(1),\n        color: theme.palette.text.primary\n    }\n}));\n","import { Theme, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { Ranking } from '../../../../component/Ranking';\n\ninterface Props {\n    title: string;\n    ranking: number;\n}\n\nexport const TitlePanel = ({ title, ranking }: Props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.title} >\n            <Typography color='textPrimary' variant='h3' >{title}</Typography>\n            <Ranking ranking={ranking} />\n        </div>\n    )\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    title: {\n        marginBottom: theme.spacing(2),\n    }\n}));","import { Moment } from 'moment';\n\nexport enum DAY_STATE {\n    EMPTY = 0,\n    BLOCKED_DAY = 1,\n    SINGLE_SELECTED = 2,\n    FIRST_RANGE_SELECTED = 3,\n    MIDDLE_RANGE_SELECTED = 4,\n    LAST_RANGE_SELECTED = 5,\n    BEFORE_CURRENT = 6,\n    OUT_MONTH = 7,\n    FIRST_IN_BOOKING_RANGE = 8,\n    MIDDLE_IN_BOOKING_RANGE = 9,\n    LAST_IN_BOOKING_RANGE = 10,\n    BLOCKED_BY_BOOKING = 11,\n\n}\n\nexport type Range = {\n    checkin: Moment | undefined;\n    checkout: Moment | undefined;\n}\n\nexport type DayModel = {\n    dateOfDay: Moment,\n    currentMonth: Moment;\n    state: number;\n}","import { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { WEEK_DAYS } from '../../utils/constants';\nimport customTheme from '../../theme';\n\nexport const WeekDay = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.container}>\n            {WEEK_DAYS.map((day) => (\n                <div key={day} className={classes.weekDay}>\n                    {day}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n    },\n    weekDay: {\n        width: customTheme.dimension.width.day_calendar_width,\n        display: 'flex',\n        fontWeight: 'bold',\n        fontSize: 'small',\n        justifyContent: 'center'\n    }\n});","import React from 'react'\nimport { makeStyles } from '@material-ui/styles';\nimport { WeekDay } from './WeekDay';\nimport { Moment } from 'moment';\nimport customTheme from '../../theme';\n\ninterface Props {\n    month: Moment\n    weeks: JSX.Element[]\n}\n\nconst Month = ({ month, weeks }: Props) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.container} >\n            <div className={classes.month} >\n                <span className={classes.name}>{month.format('MMMM YYYY')}</span>\n                <WeekDay />\n                {weeks}\n            </div>\n        </div>\n    )\n}\n\nexport default Month;\n\nconst useStyles = makeStyles({\n    container: {\n        width: 'fit-content',\n        margin: '-1.8rem 1.5rem 0 1.5rem',\n    },\n    month: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    name: {\n        display: 'flex',\n        width: customTheme.dimension.width.w100,\n        fontWeight: 'bold',\n        fontSize: 'small',\n        justifyContent: 'center',\n        marginBottom: customTheme.spacing.margin.small\n    }\n});","import { makeStyles, CSSProperties } from '@material-ui/styles'\nimport { Moment } from 'moment'\nimport React from 'react'\nimport { DayModel } from '../../containers/calendar/utils/types'\nimport customTheme from '../../theme'\n\ninterface Props {\n    day: DayModel;\n    onDayClick: (date: Moment) => void;\n    style: CSSProperties;\n}\n\nconst Day = ({ day: { dateOfDay }, style, onDayClick }: Props) => {\n    const classes = useStyles(style)\n\n    const handleOnClick = () => {\n        onDayClick(dateOfDay)\n    }\n    return (\n        <div className={classes().container} onClick={handleOnClick} >\n            {dateOfDay.date()}\n        </div>\n    )\n}\nexport default Day;\n\nconst useStyles = (props: CSSProperties) => makeStyles({\n    container: {\n        display: 'flex',\n        width: customTheme.dimension.width.day_calendar_width,\n        height: customTheme.dimension.height.day_calendar_height,\n        fontSize: 'small',\n        justifyContent: 'center',\n        alignItems: 'center',\n        cursor: 'pointer',\n        ...props\n    }\n});","import { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport customTheme from '../../theme';\n\nexport const FakeDay = () => {\n    const classes = useStyles();\n    return <div className={classes.container} />;\n};\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n        width: customTheme.dimension.width.day_calendar_width,\n        height: customTheme.dimension.height.day_calendar_height,\n        backgroundColor: customTheme.color.background\n    }\n});","import { Moment } from 'moment';\nimport React from 'react';\nimport DayView from '../../component/calendar/Day';\nimport { FakeDay } from '../../component/calendar/FakeDay';\nimport customTheme, { theme } from '../../theme';\nimport { DayModel, DAY_STATE } from './utils/types';\n\ninterface Props {\n    day: DayModel;\n    onDayClick: (date: Moment) => void;\n}\n\nexport const Day = ({ day, onDayClick }: Props) => {\n    return (!day.dateOfDay.isSame(day.currentMonth, 'M')) ? <FakeDay /> : <DayView day={day} onDayClick={onDayClick} style={getDayStyle(day)} />\n}\n\nconst getDayStyle = (day: DayModel) => {\n    switch (day.state) {\n        case DAY_STATE.BLOCKED_DAY: {\n            return {\n                textDecoration: 'line-through',\n                backgroundColor: customTheme.color.grayLight1,\n                color: customTheme.color.primary,\n            }\n        }\n        case DAY_STATE.BLOCKED_BY_BOOKING: {\n            return {\n                textDecoration: 'line-through',\n                color: customTheme.color.white,\n                cursor: 'default',\n                backgroundColor: customTheme.color.foreground,\n                fontWeight: customTheme.dimension.font.bold\n            }\n        }\n        case DAY_STATE.SINGLE_SELECTED: {\n            return {\n                color: customTheme.color.white,\n                borderRadius: customTheme.dimension.width.w100,\n                backgroundColor: customTheme.color.primaryAccent,\n                fontWeight: customTheme.dimension.font.bold\n            }\n        }\n        case DAY_STATE.FIRST_RANGE_SELECTED: {\n            return {\n                backgroundColor: customTheme.color.primaryAccent,\n                borderTopLeftRadius: customTheme.dimension.width.w50,\n                borderBottomLeftRadius: customTheme.dimension.width.w50,\n                fontWeight: customTheme.dimension.font.bold,\n                color: customTheme.color.white\n            }\n        }\n        case DAY_STATE.MIDDLE_RANGE_SELECTED: {\n            return {\n                backgroundColor: customTheme.color.primaryAccent,\n                color: customTheme.color.white,\n                fontWeight: customTheme.dimension.font.bold\n            }\n        }\n        case DAY_STATE.LAST_RANGE_SELECTED: {\n            return {\n                backgroundColor: customTheme.color.primaryAccent,\n                color: customTheme.color.white,\n                borderTopRightRadius: customTheme.dimension.width.w50,\n                borderBottomRightRadius: customTheme.dimension.width.w50,\n                fontWeight: customTheme.dimension.font.bold\n            }\n        }\n        case DAY_STATE.EMPTY: {\n            return {\n                borderRadius: customTheme.dimension.radius.small,\n                color: theme.palette.text.primary,\n                backgroundColor: customTheme.color.white\n            }\n        }\n        case DAY_STATE.BEFORE_CURRENT: {\n            return {\n                textDecoration: 'line-through',\n                backgroundColor: customTheme.color.grayLight1,\n                cursor: 'default',\n                color: theme.palette.text.secondary\n            }\n        }\n        default: { return {} }\n    }\n};\n\n\n\n\n\n\n","import React from 'react'\nimport { Moment } from 'moment'\nimport { makeStyles } from '@material-ui/styles'\nimport { DayModel } from './utils/types'\nimport { Day } from './Day'\nimport customTheme from '../../theme'\n\n\ninterface Props {\n    dayList: DayModel[]\n    onDayClick: (date: Moment) => void;\n}\n\nexport const Week = ({ dayList, onDayClick }: Props) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.container} >\n            {dayList.map((day: DayModel, index: number) => <Day key={index} day={day} onDayClick={onDayClick} />)}\n        </div>\n    )\n}\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        width: 'fit-content',\n        marginTop: customTheme.spacing.margin.smaller1\n    }\n});","import { Moment } from 'moment'\nimport React, { useMemo } from 'react'\nimport { DayModel } from './utils/types'\nimport MonthView from '../../component/calendar/Month'\nimport { Week } from './Week'\n\ninterface Props {\n    dayList: DayModel[]\n    month: Moment;\n    onDayClick: (date: Moment) => void;\n}\n\nexport const Month = ({ dayList, month, onDayClick }: Props) => {\n    const weeks = useMemo(() => createWeeks(dayList, onDayClick), [dayList, onDayClick])\n    return <MonthView month={month} weeks={weeks} />\n}\n\nconst createWeeks = (dayList: DayModel[], onDayClick: (date: Moment) => void): JSX.Element[] => {\n    let weeks: JSX.Element[] = []\n    for (let i = 0; i <= dayList.length; i = i + 7) {\n        weeks.push(<Week key={i} dayList={dayList.slice(i, i + 7)} onDayClick={onDayClick} />)\n    }\n    return weeks\n}\n\n\n\n","import React from \"react\";\n\nconst LeftArrow = props => (\n    <svg width={10.143} height={18.286} viewBox=\"0 0 10.143 18.286\" {...props}>\n        <path\n            data-name=\"Trazado 34\"\n            d=\"M9.143 1L1 9.143l8.143 8.143\"\n            fill=\"none\"\n            stroke=\"#707070\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n        />\n    </svg>\n);\n\nexport default LeftArrow;\n\n","import React from 'react'\nimport { IconButton } from '@material-ui/core'\nimport LeftArrow from '../icons/LeftArrow'\nimport { makeStyles } from '@material-ui/styles'\nimport customTheme from '../../../theme'\n\ninterface Props {\n    previousMonth: () => void;\n}\n\nexport const LeftArrowNav = ({ previousMonth }: Props) => {\n    const classes = useStyles()\n    return (\n        <IconButton className={classes.arrow} aria-label=\"nav_left\" onClick={previousMonth}>\n            <LeftArrow width={'1rem'} height={'1rem'} />\n        </IconButton>\n    )\n}\n\nconst useStyles = makeStyles({\n    arrow: {\n        marginLeft: customTheme.dimension.width.small\n    }\n});","import React from \"react\";\n\nconst RightArrow = props => (\n\t<svg width={10.143} height={18.287} viewBox=\"0 0 10.143 18.287\" {...props}>\n\t\t<path\n\t\t\tdata-name=\"Trazado 35\"\n\t\t\td=\"M1 17.286l8.143-8.143L1 1\"\n\t\t\tfill=\"none\"\n\t\t\tstroke=\"#707070\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t\tstrokeLinejoin=\"round\"\n\t\t\tstrokeWidth={2}\n\t\t/>\n\t</svg>\n);\n\nexport default RightArrow;\n","import React from 'react'\nimport { IconButton } from '@material-ui/core'\nimport RightArrow from '../icons/RightArrow'\nimport { makeStyles } from '@material-ui/styles'\nimport customTheme from '../../../theme'\n\ninterface Props {\n    nextMonth: () => void;\n}\n\nexport const RightArrowNav = ({ nextMonth }: Props) => {\n    const classes = useStyles()\n    return (\n        <IconButton className={classes.arrow} aria-label=\"nav_left\" onClick={nextMonth}>\n            <RightArrow width={'1rem'} height={'1rem'} />\n        </IconButton>\n    )\n}\n\n\nconst useStyles = makeStyles({\n    arrow: {\n        marginRight: customTheme.dimension.width.small\n    }\n});","import { makeStyles } from '@material-ui/styles';\nimport React from 'react';\nimport { LeftArrowNav } from './LeftArrowNav';\nimport { RightArrowNav } from './RightArrowNav';\nimport { Theme } from '@material-ui/core';\n\ninterface Props {\n\tnextMonth: () => void;\n\tpreviousMonth: () => void;\n}\n\nexport const CalendarNavBar = ({ previousMonth, nextMonth }: Props) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<LeftArrowNav previousMonth={previousMonth} />\n\t\t\t<RightArrowNav nextMonth={nextMonth} />\n\t\t</div>\n\t);\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'space-between',\n\t\talignItems: 'center',\n\t\tpaddingTop: '2px',\n\t\tpaddingBottom: '2px',\n\t\twidth: '100%',\n\t}\n}\n));","import Hidden from '@material-ui/core/Hidden';\nimport { makeStyles } from '@material-ui/styles';\nimport { Moment } from 'moment';\nimport React from 'react';\nimport { DayModel } from '../../containers/calendar/utils/types';\nimport { Month } from '../../containers/calendar/Month';\nimport { CalendarNavBar } from '../../containers/calendar/nav/CalendarNavBar';\n\ninterface Props {\n    firstMonthDayList: DayModel[];\n    secondMonthDayList: DayModel[];\n    currentMonth: Moment;\n    nextMonth: () => void;\n    previousMonth: () => void;\n    onDayClick: (date: Moment) => void;\n}\n\nconst Year = ({ previousMonth, nextMonth, onDayClick, currentMonth, ...props }: Props) => {\n    const classes = useStyles()\n    return (\n        <div className={classes.container}>\n            <CalendarNavBar nextMonth={nextMonth} previousMonth={previousMonth} />\n            <div className={classes.month}>\n                <Month month={currentMonth} dayList={props.firstMonthDayList} onDayClick={onDayClick} />\n                <Hidden only={['xs']} >\n                    <Month month={currentMonth.clone().add(1, 'M')} dayList={props.secondMonthDayList} onDayClick={onDayClick} />\n                </Hidden>\n            </div>\n        </div>\n    )\n}\n\nexport default Year;\n\nconst useStyles = makeStyles({\n    container: {\n        width: 'max-content',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    month: {\n        display: 'flex',\n        flexFlow: 'row wrap',\n        justifyContent: 'center',\n    }\n});","import moment, { Moment } from 'moment';\nimport React, { useMemo } from 'react';\nimport YearView from '../../component/calendar/Year';\nimport { getBlockedDateRange } from '../../utils/calendar';\nimport { BlockedDay } from './Calendar';\nimport { DayModel, DAY_STATE, Range } from './utils/types';\n\ninterface Props {\n    currentMonth: Moment;\n    blockedDayList: BlockedDay[]\n    range: Range | undefined;\n    onDayClick: (date: Moment) => void;\n    setCurrentMonth: (month: Moment) => void;\n}\n\nexport const Year = ({ currentMonth, setCurrentMonth, range, blockedDayList, onDayClick }: Props) => {\n    const dayListFirstMonth = useMemo(() => createDays(currentMonth, range, blockedDayList), [currentMonth, range, blockedDayList]);\n    const dayListSecondMonth = useMemo(() => createDays(currentMonth.clone().add(1, 'M'), range, blockedDayList), [currentMonth, range, blockedDayList]);\n\n    const nextMonth = () => {\n        const thisMoment = currentMonth.clone();\n        setCurrentMonth(thisMoment.add(1, 'month'));\n    };\n\n    const previousMonth = () => {\n        const thisMoment = currentMonth.clone();\n        setCurrentMonth(thisMoment.subtract(1, 'month'));\n    };\n    return <YearView\n        currentMonth={currentMonth}\n        firstMonthDayList={dayListFirstMonth}\n        secondMonthDayList={dayListSecondMonth}\n        onDayClick={onDayClick}\n        nextMonth={nextMonth}\n        previousMonth={previousMonth}\n    />\n}\n\nconst createDays = (month: Moment, range: Range | undefined, blockedDayList: BlockedDay[]): DayModel[] => {\n    const startOfMonth = month.clone().startOf('month').startOf('week');\n    const endOfMonth = month.clone().endOf('month').endOf('week');\n    return generateDayList(startOfMonth, endOfMonth, month, range, blockedDayList)\n};\n\nconst generateDayList = (firstDay: Moment, endOfMonth: Moment, currentMonth: Moment, range: Range | undefined, blockedDayList: BlockedDay[]): DayModel[] => {\n    let days: DayModel[] = [];\n    const currentDate = moment()\n    while (firstDay < endOfMonth) {\n        days.push({ dateOfDay: firstDay.clone(), currentMonth: currentMonth.clone(), state: getDayState(firstDay, currentDate, range, blockedDayList) });\n        firstDay.add(24, 'hours');\n    }\n    return days\n}\n\nconst getDayState = (day: Moment, currentDate: Moment, range: Range | undefined, blockedDayList: BlockedDay[]) => {\n    if (day.isBefore(currentDate)) {\n        return DAY_STATE.BEFORE_CURRENT;\n    } else if (range && day.isSame(range.checkin) && range.checkout === undefined) {\n        return DAY_STATE.SINGLE_SELECTED;\n    } else if (range && day.isSame(range.checkin) && range.checkout !== undefined) {\n        return DAY_STATE.FIRST_RANGE_SELECTED;\n    } else if (range && day.isBetween(range.checkin, range.checkout)) {\n        return DAY_STATE.MIDDLE_RANGE_SELECTED;\n    } else if (range && day.isSame(range.checkout)) {\n        return DAY_STATE.LAST_RANGE_SELECTED;\n    }\n    return resolveByDefaultState(day, blockedDayList)\n}\n\nconst resolveByDefaultState = (day: Moment, blockedDayList: BlockedDay[]) => {\n\n    for (let i = 0; i < blockedDayList.length; i++) {\n        const range = getBlockedDateRange(blockedDayList[i])\n        if (isBLockedByBooking(day, range, blockedDayList[i].byBooking)) {\n            return DAY_STATE.BLOCKED_BY_BOOKING;\n        } else if (isBLocked(day, range, blockedDayList[i].byBooking)) {\n            return DAY_STATE.BLOCKED_DAY\n        }\n    } return DAY_STATE.EMPTY\n}\n\n\nconst isBLockedByBooking = (day: Moment, range: Range, byBooking: boolean | undefined | null) => {\n    return (day.isSameOrAfter(range.checkin) && day.isBefore(range.checkout) && byBooking) ? true : false\n}\n\nconst isBLocked = (day: Moment, range: Range, byBooking: boolean | undefined | null) => {\n    return (day.isSameOrAfter(range.checkin) && day.isSameOrBefore(range.checkout) && !byBooking) ? true : false\n}\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport { Moment } from 'moment';\nimport { Range } from '../../containers/calendar/utils/types';\nimport { Year } from '../../containers/calendar/Year';\nimport { BlockedDay } from '../../containers/calendar/Calendar';\n\ninterface Props {\n    currentMonth: Moment;\n    blockedDayList: BlockedDay[]\n    range: Range | undefined;\n    setCurrentMonth: (date: Moment) => void;\n    handleOnClickedDay: (date: Moment) => void;\n}\n\nconst Calendar = ({ currentMonth, blockedDayList, range, setCurrentMonth, handleOnClickedDay }: Props) => {\n    return (\n        <Year\n            currentMonth={currentMonth}\n            range={range}\n            setCurrentMonth={setCurrentMonth}\n            onDayClick={handleOnClickedDay}\n            blockedDayList={blockedDayList}\n        />\n    )\n}\n\nexport default Calendar","import moment, { Moment } from 'moment';\nimport React, { useState } from 'react';\nimport CalendarView from '../../component/calendar/Calendar';\nimport { getBlockedDateRange } from '../../utils/calendar';\nimport { DATE_FORMAT } from '../../utils/constants';\nimport { Range } from './utils/types';\n\nexport type BlockedDay = {\n    checkin: string;\n    checkout: string\n    byBooking?: boolean | undefined | null;\n}\n\ninterface Props {\n    blockedDayList: BlockedDay[]\n    onChangeRange: (range: Range) => void;\n}\n\nexport const Calendar = ({ blockedDayList, onChangeRange }: Props) => {\n    const [currentMonth, setCurrentMonth] = useState(moment(new Date(), DATE_FORMAT));\n    const [range, setRange] = useState<Range>()\n\n    const checkRange = (date: Moment) => {\n        checkRangeInEditableMode(date)\n    }\n\n    const checkRangeInEditableMode = (date: Moment) => {\n        if (!range && isSelectedCheckInValid(date, blockedDayList)) {\n            setRange({ checkin: date, checkout: undefined })\n            onChangeRange({ checkin: date, checkout: undefined })\n        } else if (range && range.checkout === undefined && isSelectedRangeValid(range.checkin!, date, blockedDayList)) {\n            const orderedRange = checkRangeOrder(date, range.checkin!)\n            setRange(orderedRange)\n            onChangeRange(orderedRange)\n        } else if (isSelectedCheckInValid(date, blockedDayList)) {\n            setRange({ checkin: date, checkout: undefined })\n            onChangeRange({ checkin: date, checkout: undefined })\n        }\n    }\n\n    const handleOnClickedDay = (date: Moment) => {\n        checkRange(date)\n    }\n    return <CalendarView currentMonth={currentMonth} blockedDayList={blockedDayList} range={range} setCurrentMonth={setCurrentMonth} handleOnClickedDay={handleOnClickedDay} />\n}\n\nconst checkRangeOrder = (date: Moment, checkIn: Moment): Range => {\n    if (date.isBefore(checkIn)) {\n        return { checkin: date, checkout: checkIn }\n    } else return { checkin: checkIn, checkout: date }\n}\n\nconst isSelectedCheckInValid = (date: Moment, blockedDays: BlockedDay[]) => {\n    for (let i = 0; i < blockedDays.length; i++) {\n        const range = getBlockedDateRange(blockedDays[i])\n        if (date.isSameOrAfter(range.checkin) && date.isBefore(range.checkout) && blockedDays[i].byBooking) {\n            return false;\n        }\n    } return true;\n}\n\nconst isSelectedRangeValid = (checkIn: Moment, checkOut: Moment, blockedDays: BlockedDay[]) => {\n    if (checkIn.isBefore(checkOut)) {\n        for (let i = 0; i < blockedDays.length; i++) {\n            const range = getBlockedDateRange(blockedDays[i])\n            if (range.checkin!.isBetween(checkIn, checkOut) && blockedDays[i].byBooking) return false;\n        } return true;\n    } return false;\n}\n\n\n\n\n"],"sourceRoot":""}